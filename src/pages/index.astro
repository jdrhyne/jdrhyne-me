---
import Layout from '../layouts/Layout.astro';
import Hero from '../components/Hero.astro';
import { getCollection } from 'astro:content';

const allPosts = await getCollection('blog', ({ data }) => {
  return !data.draft;
});

// Sort posts by date (newest first)
const sortedPosts = allPosts.sort((a, b) => 
  new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime()
);

// Group posts by year
const postsByYear = sortedPosts.reduce((acc, post) => {
  const year = new Date(post.data.pubDate).getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {} as Record<number, typeof sortedPosts>);

const years = Object.keys(postsByYear).map(Number).sort((a, b) => b - a);

function formatDate(date: Date) {
  return date.toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric'
  });
}
---

<Layout title="The Rhyne Report" description="Personal blog and insights">
  <!-- Hero Section -->
  <Hero 
    name="Jonathan D. Rhyne"
    username="jdrhyne"
    tagline="A collection of insights, thoughts, and observations on technology, business, and life. Every post is crafted to share knowledge and spark meaningful conversations."
    avatarSrc="/avatar-placeholder.svg"
    avatarAlt="Jonathan D. Rhyne's avatar"
    socialLinks={{
      github: "https://github.com/jdrhyne",
      twitter: "https://x.com/jdrhyne",
      linkedin: "https://linkedin.com/in/jdrhyne",
      email: "hello@jdrhyne.com"
    }}
  />
  
  <div class="max-w-5xl mx-auto px-4 sm:px-6 lg:px-8 py-8">

    <!-- Recent Posts -->
    <div class="mb-16">
      <h2 class="text-3xl font-semibold text-gray-900 mb-12">Recent Articles</h2>
      
      {years.map((year) => (
        <div class="mb-16">
          <h3 class="text-2xl font-semibold text-gray-800 mb-8 pb-3 border-b-2 border-gray-100">
            {year}
          </h3>
          <div class="space-y-8">
            {postsByYear[year].map((post) => (
              <article class="group bg-white border border-gray-200 rounded-2xl p-8 hover:border-blue-300 hover:shadow-elegant-lg transition-all">
                <div class="flex flex-col lg:flex-row lg:items-start lg:justify-between gap-6">
                  <div class="flex-1">
                    <h4 class="text-2xl font-semibold text-gray-900 group-hover:text-blue-700 transition-colors mb-3 leading-tight">
                      <a href={`/blog/${post.slug}`} class="no-underline">
                        {post.data.title}
                      </a>
                    </h4>
                    <p class="text-gray-600 mb-4 leading-relaxed text-lg">
                      {post.data.description}
                    </p>
                    <div class="flex items-center gap-3 flex-wrap">
                      {post.data.tags.map((tag) => (
                        <a href={`/tags/${tag}`} class="inline-block bg-blue-50 text-blue-700 text-sm px-3 py-2 rounded-full font-medium hover:bg-blue-100 transition-colors">
                          {tag}
                        </a>
                      ))}
                    </div>
                  </div>
                  <div class="text-sm text-gray-500 whitespace-nowrap font-medium lg:mt-1">
                    {formatDate(new Date(post.data.pubDate))}
                  </div>
                </div>
              </article>
            ))}
          </div>
        </div>
      ))}
    </div>

    {sortedPosts.length === 0 && (
      <div class="text-center py-12">
        <p class="text-gray-600">No posts yet. Check back soon!</p>
      </div>
    )}
  </div>
</Layout>
