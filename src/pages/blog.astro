---
import Layout from '../components/Layout.astro';


const allPosts = await Astro.glob('../content/blog/*.md');
const sortedPosts = allPosts
  .sort((a, b) => new Date(b.frontmatter.date).getTime() - new Date(a.frontmatter.date).getTime());

// Group posts by year
const postsByYear = sortedPosts.reduce((acc, post) => {
  const year = new Date(post.frontmatter.date).getFullYear();
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {} as Record<number, typeof sortedPosts>);

// Get years in descending order
const years = Object.keys(postsByYear).map(Number).sort((a, b) => b - a);
---

<Layout title="Thoughts | @jdrhyne" description="All thoughts and posts from @jdrhyne">
  <div class="blog-page">
    <header class="blog-header">
      <h1 class="blog-title">Thoughts</h1>
      <hr class="blog-rule" />
    </header>

    {sortedPosts.length > 0 ? (
      <div class="posts-by-year">
        {years.map(year => (
          <section class="year-section">
            <h2 class="year-title">{year}</h2>
            <div class="posts-list">
              {postsByYear[year].map(post => (
                <article class="post-item">
                  <h3 class="post-title">
                    <a href={`/blog/${post.file.split('/').pop()?.replace('.md', '')}`}>{post.frontmatter.title}</a>
                  </h3>
                  
                  <div class="post-meta">
                    <time class="post-date" datetime={post.frontmatter.date}>
                      {new Date(post.frontmatter.date).toLocaleDateString('en-US', {
                        month: 'long',
                        day: 'numeric'
                      })}
                    </time>
                    
                    {post.frontmatter.tags && (
                      <div class="post-categories">
                        {post.frontmatter.tags.map((tag) => (
                          <span class="category">{tag}</span>
                        ))}
                      </div>
                    )}
                  </div>
                  
                  {post.frontmatter.description && (
                    <p class="post-excerpt">{post.frontmatter.description}</p>
                  )}
                  
                  <a href={`/blog/${post.file.split('/').pop()?.replace('.md', '')}`} class="read-more">Read More â†’</a>
                </article>
              ))}
            </div>
          </section>
        ))}
      </div>
    ) : (
      <div class="no-posts">
        <p>No posts available yet. Start writing by creating files in <code>src/pages/blog/</code></p>
      </div>
    )}
  </div>
</Layout>

<style>
  .blog-page {
    max-width: 800px;
    margin: 0 auto;
  }

  .blog-header {
    text-align: center;
    margin-bottom: calc(var(--grid-unit) * 8);
  }

  .blog-title {
    font-family: var(--font-heading-primary);
    font-size: 3.5rem;
    font-weight: 900;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.05em;
    line-height: 1.1;
    margin-bottom: calc(var(--grid-unit) * 3);
  }



  .blog-rule {
    height: 4px;
    background-color: var(--color-accent);
    border: none;
    width: 120px;
    margin: 0 auto;
  }

  .posts-by-year {
    display: flex;
    flex-direction: column;
    gap: calc(var(--grid-unit) * 8);
  }

  .year-section {
    display: flex;
    flex-direction: column;
    gap: calc(var(--grid-unit) * 3);
  }

  .year-title {
    font-family: var(--font-heading-primary);
    font-size: 3rem;
    font-weight: 900;
    color: var(--color-accent);
    text-transform: uppercase;
    letter-spacing: 0.1em;
    margin: 0;
    padding-bottom: calc(var(--grid-unit) * 2);
    border-bottom: 3px solid var(--color-accent);
  }

  .posts-list {
    display: flex;
    flex-direction: column;
    gap: calc(var(--grid-unit) * 6);
  }

  .post-item {
    border-bottom: 1px solid var(--color-border);
    padding-bottom: calc(var(--grid-unit) * 4);
  }

  .post-item:last-child {
    border-bottom: none;
    padding-bottom: 0;
  }

  .post-title {
    font-family: var(--font-heading-secondary);
    font-size: 1.75rem;
    font-weight: 700;
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .post-title a {
    color: var(--color-text-primary);
    text-decoration: none;
    transition: color 0.2s ease;
  }

  .post-title a:hover,
  .post-title a:focus {
    color: var(--color-accent);
  }

  .post-meta {
    display: flex;
    flex-direction: column;
    gap: calc(var(--grid-unit));
    margin-bottom: calc(var(--grid-unit) * 2);
  }

  .post-date {
    font-family: var(--font-mono);
    font-size: 0.9rem;
    color: var(--color-text-muted);
    text-transform: uppercase;
    letter-spacing: 0.05em;
  }

  .post-categories {
    display: flex;
    flex-wrap: wrap;
    gap: calc(var(--grid-unit) / 2);
  }

  .category {
    background-color: var(--color-text-primary);
    color: white;
    padding: calc(var(--grid-unit) / 4) calc(var(--grid-unit) / 2);
    font-size: 0.75rem;
    font-weight: 600;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    border-radius: 2px;
  }

  .post-excerpt {
    color: var(--color-text-secondary);
    line-height: 1.6;
    margin-bottom: calc(var(--grid-unit) * 2);
    font-size: 1.1rem;
  }

  .read-more {
    font-family: var(--font-heading-secondary);
    font-weight: 700;
    text-transform: uppercase;
    letter-spacing: 0.05em;
    color: var(--color-accent);
    text-decoration: none;
    font-size: 0.9rem;
    transition: color 0.2s ease;
  }

  .read-more:hover,
  .read-more:focus {
    color: var(--color-text-primary);
  }

  .no-posts {
    text-align: center;
    padding: calc(var(--grid-unit) * 6);
    color: var(--color-text-muted);
    font-style: italic;
  }

  .no-posts code {
    background-color: var(--color-surface);
    padding: 2px 4px;
    border-radius: 3px;
    font-family: var(--font-mono);
  }

  @media (max-width: 768px) {
    .blog-title {
      font-size: 2.5rem;
    }

    .post-title {
      font-size: 1.75rem;
    }

    .post-meta {
      flex-direction: column;
      align-items: flex-start;
    }
  }
</style>